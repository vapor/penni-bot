name: Deploy bot stack

on:
  push:
    branches:
      - main

jobs:
  deploy: 
    name: Deploy Stack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
      - name: Configure AWS credentials
        id: cred
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEPLOYER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOYER_ACCESS_SECRET_KEY }}
          aws-region: 'eu-west-1'
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.4.0
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: penny-bot-discord-image
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1.1.1
        with:
          task-definition: task-def.json
          container-name: penny-bot
          image: ${{ steps.build-image.outputs.image }}
      - name: Print output aws task definition
        run: |
          JSON=$(cat ${{ steps.task-def.outputs.task-definition }})
          echo $JSON
      - name: Deploy to Amazon ECS Service
        id: task-dep
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          wait-for-service-stability: true
      - name: Deploy to AWS cloudformation
        uses: aws-actions/aws-cloudformation-github-deploy@v1.2.0
        with:
          name: penny-discord-bot-stack
          template: ./Stack.yml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: >-
            TaskDefinition=${{ steps.task-dep.outputs.task-definition-arn }}
