name: Build and deploy a lambda function

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
        description: 'The name of the package target to build. Also used as the name of the deployed lambda.'
      s3Bucket:
        required: false
        type: string
        default: 'penny-discord-bot'
        description: 'The S3 bucket used to upload the lambda.'
      awsRegion:
        required: false
        type: string
        default: 'eu-west-1'
        description: 'The AWS region to deploy to.'
    secrets:
      DEPLOYER_ACCESS_KEY_ID:
        description: 'The AWS access key ID for the S3 bucket used to upload the lambda.'
        required: true
      DEPLOYER_ACCESS_SECRET_KEY:
        description: 'The AWS secret key for the S3 bucket used to upload the lambda.'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    container: swift:5.8-amazonlinux2
    env:
      AWS_S3_BUCKET: ${{ inputs.s3Bucket }}
      AWS_ACCESS_KEY_ID: ${{ secrets.DEPLOYER_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEPLOYER_ACCESS_SECRET_KEY }}
      AWS_REGION: ${{ inputs.awsRegion }}
      LAMBDA_NAME: ${{ inputs.target }}
    steps:
      - name: Install additional dependencies
        run: |
          yum -y install \
            {libuuid,libicu,libedit,sqlite,python,ncurses,openssl}-devel \
            libtool jq zip awscli
      - name: Configure AWS
        run: |
          printf '%s\n%s\n%s\ntext\n' \
            "${AWS_ACCESS_KEY_ID}" \
            "${AWS_SECRET_ACCESS_KEY}" \
            "${AWS_REGION}" | \
          aws configure >/dev/null 2>&1 
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Build lambda target
        run: |
          swift build \
            --product "${LAMBDA_NAME}" \
            -c release \
            --static-swift-stdlib
      - name: Package executable
        run: |
          ln --symbolic --relative \
            "./.build/release/${LAMBDA_NAME}" \
            ./.build/release/bootstrap
          zip --junk-paths -symlinks \
            "./.build/release/${LAMBDA_NAME}.zip" \
            "./.build/release/${LAMBDA_NAME}" \
            ./.build/release/bootstrap
      - name: Sync to S3
        run: |
          aws s3 sync \
            ./.build/release "s3://${AWS_S3_BUCKET}" \
            --exclude '*' --include "${LAMBDA_NAME}.zip"
            --acl public-read --follow-symlinks --no-progress
      - name: Update lambda code
        run: |
          aws lambda update-function-code \
            --function-name "${LAMBDA_NAME}-lambda" \
            --s3-bucket "${AWS_S3_BUCKET}" \
            --s3-key "${LAMBDA_NAME}.zip"
